syntax = "proto3";
package kira.kiraHub;

import "order.proto";
import "signerkey.proto";
import "gogoproto/gogo.proto";
option go_package = "github.com/cosmos/cosmos-sdk/x/kiraHub/types";

// Query defines the gRPC querier service
service Query {
    rpc GetOrderBooks (GetOrderBooksRequest) returns (GetOrderBooksResponse) {}
    rpc GetOrderBooksByTradingPair (GetOrderBooksByTradingPairRequest) returns (GetOrderBooksResponse) {}
    rpc GetOrders (GetOrdersRequest) returns (GetOrdersResponse) {}
    rpc GetSignerKeys (GetSignerKeysRequest) returns (GetSignerKeysResponse) {}
}

message GetOrderBooksRequest {
    string QueryType = 1;
    string QueryValue = 2;
    string QueryValue2 = 3; // this is only for QueryType = "TradingPair"
}

message GetOrderBooksResponse {
    repeated OrderBook orderbooks = 1 [
        (gogoproto.casttype) = "OrderBook",
        (gogoproto.nullable) = false
    ];
}

message GetOrderBooksByTradingPairRequest {
    string Base = 1;
    string Quote = 2;
}

message GetOrdersRequest {
    string OrderBookID = 1;
    uint32 MaxOrders = 2;
    uint32 MinAmount = 3;
}

message GetOrdersResponse {
    repeated LimitOrder orders = 1 [
        (gogoproto.casttype) = "LimitOrder",
        (gogoproto.nullable) = false
    ];
}

message GetSignerKeysRequest {
	bytes Curator = 6 [
        (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"
    ];
}

message GetSignerKeysResponse {
    repeated SignerKey signerkeys = 1 [
        (gogoproto.casttype) = "SignerKey",
        (gogoproto.nullable) = false
    ];
}
  